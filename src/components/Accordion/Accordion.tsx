import cn from 'classnames';
import React, { useEffect, useState } from 'react';
import styles from './Accordion.module.css';

interface AccordionItem {
  title: string;
  content: string[];
}

const itemsDefault: AccordionItem[] = [
	{
		title: 'Если частью вспоминаемой ситуации является действительная физическая боль',
		content: [
			'Вспомните приятный случай, который произошел позже.',
			'Вспомните, что вы делали в это время в прошлом году.',
			'Вспомните момент, когда вы действительно получали удовольствие.',
			'Вспомните, что вы делали в это время в прошлом месяце.',
			'Вспомните, что вы делали вчера.',
			'Вспомните что-нибудь приятное, случившееся сегодня.'
		]
	},{
		title: 'Если не было физической боли, но была печаль, вспомните следующее:',
		content: [
			'Следующий после той ситуации случай, когда вы получили что-то, что вам понравилось.',
			'Вспомните что-то, что у вас есть сейчас, и от чего вы получаете удовольствие.',
			'Вспомните что-то, что вы давно хотели и наконец получили.',
			'Вспомните случай, когда кто-то был очень мил с вами.',
			'Вспомните последний раз, когда вы получили деньги.',
			'Вспомните вчерашний обед.',
			'Вспомните сегодняшнюю еду.'
		]
	},{
		title: 'Если вы просто почувствуете неудобство, без особой печали или физической боли, испытывая лишь желание избежать вспоминания, используйте следующий список:',
		content: [
			'Вспомните этот случай снова во всей полноте от начала до конца.',
			'Вспомните этот случай еще раз.',
			'Вспомните более ранний похожий случай.',
			'Вспомните еще более ранний похожий случай.',
			'Вспомните самый ранний похожий случай, который вы можете найти.',
			'Вспомните все эти случаи, один за другим, во всей полноте.',
			'Вспомните все эти случаи еще раз, один за другим, от самого раннего до самого позднего.',
			'Еще раз вспомните все эти случаи.',
			'Пройдите по цепи похожих случаев и найдите более поздние случаи, вплоть до настоящего времени.',
			'Вспомните какой-нибудь приятный случай, произошедший в последние несколько дней. Получите все возможные ощущения.',
			'Вспомните, что вы делали час назад.'
		]
	},{
		title: 'Этот список обычно стабилизирует любое из упомянутых выше состояний.',
		content: [
			'Вспомните случай, который действительно представляется вам реальным.',
			'Вспомните случай, когда вы чувствовали настоящее аффинити со стороны кого-то.',
			'Вспомните случай, когда кто-то был с вами в хорошей коммуникации.',
			'Вспомните случай, когда вы чувствовали глубокое аффинити к кому-то другому.',
			'Вспомните случай, когда вы знали, что действительно общаетесь с кем-то.',
			'Вспомните случай, когда несколько человек полностью с вами согласились.',
			'Вспомните случай, когда вы были согласны с кем-то другим.',
			'Вспомните случай за последние два дня, когда вы чувствовали себя любящим.',
			'Вспомните случай за последние два дня, когда кто-то чувствовал любовь к вам.',
			'Вспомните случай за последние два дня, когда вы были в хорошей коммуникации с кем-то.',
			'Вспомните случай за последние два дня, который действительно представляется вам реальным.',
			'Вспомните случай за последние два дня, когда вы были в хорошей коммуникации с людьми.'
		]
	}
];

const itemsSecret: AccordionItem[] = [
	{
		title: 'Если в воспоминаемой ситуации была физическая боль',
		content: [
			'Вспомните приятное событие, которое произошло позже.',
			'Подумайте, чем вы занимались в это же время год назад.',
			'Вспомните момент, когда вам было по-настоящему хорошо.',
			'Подумайте, чем вы занимались в это же время в прошлом месяце.',
			'Вспомните, что вы делали вчера.',
			'Подумайте о чём-то хорошем, что произошло сегодня.'
		]
	},{
		title: 'Если вместо боли была грусть, попробуйте вспомнить следующее:',
		content: [
			'Случай после этой ситуации, когда вы получили что-то, что вам понравилось.',
			'Подумайте о том, что у вас есть сейчас и приносит вам радость.',
			'Вспомните момент, когда вы получили то, о чём давно мечтали.',
			'Случай, когда кто-то проявил к вам доброту.',
			'Последний раз, когда вы получили деньги.',
			'Что вы ели вчера?',
			'Что вы ели сегодня?'
		]
	},{
		title: 'Если вы чувствуете лёгкий дискомфорт или хотите избежать воспоминаний',
		content: [
			'Вспомните ситуацию полностью, от начала до конца.',
			'Снова воспроизведите её в памяти.',
			'Подумайте о более раннем похожем случае.',
			'Вспомните ещё более ранний похожий случай.',
			'Попробуйте найти самый ранний подобный случай, который сможете.',
			'Переберите все эти случаи по порядку, один за другим.',
			'Снова пройдитесь по всем этим воспоминаниям, начиная с самого раннего.',
			'Ещё раз вспомните все эти ситуации.',
			'Проследите цепочку похожих событий, включая более поздние случаи.',
			'Вспомните приятный случай, произошедший за последние несколько дней, и постарайтесь ощутить все детали.',
			'Что вы делали час назад?'
		]
	},{
		title: 'Этот список помогает стабилизировать любое из упомянутых выше состояний',
		content: [
			'Вспомните случай, который кажется вам абсолютно реальным.',
			'Момент, когда вы почувствовали искреннюю привязанность к кому-то или от кого-то.',
			'Ситуацию, где вы с кем-то хорошо общались.',
			'Случай, когда вы испытывали глубокую симпатию к другому человеку.',
			'Момент, когда вы осознавали, что действительно общаетесь с кем-то.',
			'Ситуацию, когда вы и другие полностью согласились друг с другом.',
			'Случай, когда вы были полностью согласны с кем-то.',
			'Момент за последние два дня, когда вы чувствовали любовь или привязанность.',
			'Случай за последние два дня, когда кто-то проявил любовь или заботу к вам.',
			'Ситуацию за последние два дня, где у вас было хорошее общение с кем-то.',
			'Момент за последние два дня, который казался вам реальным и важным.',
			'Случай за последние два дня, где вы были в отличной коммуникации с другими.'
		]
	}
];
    
const Accordion: React.FC = () => {
	const [activeIndex, setActiveIndex] = useState<number | null>(null);

	const [items, setItems] = useState(itemsDefault);
	const toggleAccordion = (index: number) => {
		setActiveIndex(activeIndex === index ? null : index);
	};

	const [clickCount, setClickCount] = useState(0);
	const [isActivated, setIsActivated] = useState(false);
    
	const handleHiddenClick = () => {
		if (!isActivated) {
			setClickCount((prev) => prev + 1);
		}
	};
    
	useEffect(() => {
		let timer: NodeJS.Timeout;
    
		if (clickCount > 0) {
			// Устанавливаем таймер для сброса счётчика
			timer = setTimeout(() => {
				setClickCount(0);
			}, 1000); // Сброс через 1 секунду
		}
    
		if (clickCount >= 5) {
			alert('секретный список вопросов активирован!');
			setItems(itemsSecret);
			setIsActivated(true);
			setClickCount(0);
		}
    
		return () => clearTimeout(timer); // Чистим таймер при размонтировании
	}, [clickCount]);

	return (<>
		<div className={styles.accordion}>
			{items.map((item, index) => (
				<div className={styles['accordion-item']} key={index}>
					<div
						className={cn(styles['accordion-header'], {[styles.active]: activeIndex === index} )}
						onClick={() => toggleAccordion(index)}
					>
						{item.title}
					</div>
					<div
						className={cn(styles['accordion-content'], {[styles.active]: activeIndex === index} )}
						style={{
							maxHeight: activeIndex === index ? '1050px' : '0'
						}}
					>
						<ol>
							{item.content.map(item => <li>{item}</li>)}
						</ol>
					</div>
				</div>
			))}
		</div>
		<div className={styles.secret} onClick={handleHiddenClick}/>
	</>
	);
};

export default Accordion;